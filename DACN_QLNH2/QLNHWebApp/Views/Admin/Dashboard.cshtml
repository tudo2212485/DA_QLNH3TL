@{
    ViewData["Title"] = "Dashboard - Qu·∫£n tr·ªã h·ªá th·ªëng";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid px-4">
    <!-- Welcome Section v·ªõi hi·ªáu ·ª©ng gradient hi·ªán ƒë·∫°i -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="welcome-card-modern">
                <div class="d-flex align-items-center justify-content-between flex-wrap">
                    <div class="welcome-content">
                        <h2 class="welcome-title mb-2">
                            <span class="wave">üëã</span> Ch√†o m·ª´ng, <strong>@ViewBag.FullName!</strong>
                        </h2>
                        <p class="welcome-subtitle mb-0">
                            <i class="bx bx-calendar me-2"></i>@DateTime.Now.ToString("dddd, dd MMMM yyyy", new
                                                        System.Globalization.CultureInfo("vi-VN"))
                        </p>
                    </div>
                    <div class="welcome-time">
                        <div class="time-display">@DateTime.Now.ToString("HH:mm")</div>
                        <div class="time-label">Gi·ªù hi·ªán t·∫°i</div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Statistics Cards - Thi·∫øt k·∫ø m·ªõi hi·ªán ƒë·∫°i -->
    <div class="row g-4 mb-4">
        <!-- Card 1: T·ªïng ƒë∆°n h√†ng -->
        <div class="col-xl-3 col-md-6">
            <div class="stat-card stat-card-primary">
                <div class="stat-icon">
                    <i class="bx bx-receipt"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-label">T·ªïng ƒë∆°n h√†ng</div>
                    <div class="stat-value counter-value" data-target="@ViewBag.TotalOrders">0</div>
                    <div class="stat-trend trend-up">
                        <i class="bx bx-trending-up"></i> <span>+12%</span> so v·ªõi th√°ng tr∆∞·ªõc
                    </div>
                </div>
            </div>
        </div>

        <!-- Card 2: Doanh thu -->
        <div class="col-xl-3 col-md-6">
            <div class="stat-card stat-card-success">
                <div class="stat-icon">
                    <i class="bx bx-dollar-circle"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-label">T·ªïng doanh thu</div>
                    <div class="stat-value">@ViewBag.TotalRevenue?.ToString("C0", new
                                                System.Globalization.CultureInfo("vi-VN"))</div>
                    <div class="stat-trend trend-up">
                        <i class="bx bx-trending-up"></i> <span>+8%</span> so v·ªõi th√°ng tr∆∞·ªõc
                    </div>
                </div>
            </div>
        </div>

        <!-- Card 3: Kh√°ch h√†ng -->
        <div class="col-xl-3 col-md-6">
            <div class="stat-card stat-card-info">
                <div class="stat-icon">
                    <i class="bx bx-group"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-label">T·ªïng kh√°ch h√†ng</div>
                    <div class="stat-value counter-value" data-target="@ViewBag.TotalCustomers">0</div>
                    <div class="stat-trend trend-up">
                        <i class="bx bx-trending-up"></i> <span>+15%</span> so v·ªõi th√°ng tr∆∞·ªõc
                    </div>
                </div>
            </div>
        </div>

        <!-- Card 4: Doanh thu h√¥m nay -->
        <div class="col-xl-3 col-md-6">
            <div class="stat-card stat-card-warning">
                <div class="stat-icon">
                    <i class="bx bx-trending-up"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-label">Doanh thu h√¥m nay</div>
                    <div class="stat-value">@ViewBag.TodayRevenue?.ToString("C0", new
                                                System.Globalization.CultureInfo("vi-VN"))</div>
                    <div class="stat-trend">
                        <i class="bx bx-receipt"></i> <span class="counter-value"
                            data-target="@ViewBag.TodayOrders">0</span> ƒë∆°n h√¥m nay
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Section - Layout m·ªõi logic h∆°n -->
    <div class="row g-4 mb-4">
        <!-- Revenue Chart - Main highlight -->
        <div class="col-xl-8 col-lg-7">
            <div class="chart-card">
                <div class="chart-header">
                    <div>
                        <h5 class="chart-title">
                            <i class="bx bx-line-chart"></i> Doanh thu theo th√°ng
                        </h5>
                        <p class="chart-subtitle">6 th√°ng g·∫ßn nh·∫•t</p>
                    </div>
                    <div class="chart-actions">
                        <button class="btn btn-sm btn-light"><i class="bx bx-download"></i></button>
                    </div>
                </div>
                <div class="chart-body">
                    <canvas id="revenueChart"></canvas>
                </div>
            </div>
        </div>

        <!-- Order Status Pie -->
        <div class="col-xl-4 col-lg-5">
            <div class="chart-card">
                <div class="chart-header">
                    <div>
                        <h5 class="chart-title">
                            <i class="bx bx-pie-chart-alt-2"></i> Tr·∫°ng th√°i ƒë∆°n h√†ng
                        </h5>
                        <p class="chart-subtitle">T·ªïng quan hi·ªán t·∫°i</p>
                    </div>
                </div>
                <div class="chart-body">
                    <canvas id="statusChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Top Menu Items -->
    <div class="row g-4 mb-4">
        <div class="col-12">
            <div class="chart-card">
                <div class="chart-header">
                    <div>
                        <h5 class="chart-title">
                            <i class="bx bx-bar-chart"></i> Top 5 m√≥n ƒÉn b√°n ch·∫°y nh·∫•t
                        </h5>
                        <p class="chart-subtitle">Theo s·ªë l∆∞·ª£ng ƒë√£ b√°n</p>
                    </div>
                    <div class="chart-legend">
                        <span class="legend-item"><span class="legend-color" style="background: #10b981;"></span> S·ªë
                            l∆∞·ª£ng b√°n</span>
                    </div>
                </div>
                <div class="chart-body">
                    <canvas id="topMenuChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Quick Actions - Thi·∫øt k·∫ø m·ªõi -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="quick-actions-header mb-3">
                <h5 class="section-title"><i class="bx bx-bolt-circle"></i> Thao t√°c nhanh</h5>
            </div>
            <div class="row g-3">
                <div class="col-lg-3 col-md-6">
                    <a href="@Url.Action("Index", "OrderManagement")" class="quick-action-card quick-action-primary">
                        <div class="qa-icon">
                            <i class="bx bx-receipt"></i>
                        </div>
                        <div class="qa-content">
                            <h6>Qu·∫£n l√Ω ƒë∆°n h√†ng</h6>
                            <p>Xem v√† x·ª≠ l√Ω ƒë∆°n</p>
                        </div>
                        <div class="qa-arrow">
                            <i class="bx bx-right-arrow-alt"></i>
                        </div>
                    </a>
                </div>
                <div class="col-lg-3 col-md-6">
                    <a href="@Url.Action("Create", "AdminMenu")" class="quick-action-card quick-action-success">
                        <div class="qa-icon">
                            <i class="bx bx-food-menu"></i>
                        </div>
                        <div class="qa-content">
                            <h6>Th√™m m√≥n m·ªõi</h6>
                            <p>Th√™m m√≥n v√†o menu</p>
                        </div>
                        <div class="qa-arrow">
                            <i class="bx bx-right-arrow-alt"></i>
                        </div>
                    </a>
                </div>
                <div class="col-lg-3 col-md-6">
                    <a href="@Url.Action("Employees", "Admin")" class="quick-action-card quick-action-info">
                        <div class="qa-icon">
                            <i class="bx bx-group"></i>
                        </div>
                        <div class="qa-content">
                            <h6>Qu·∫£n l√Ω nh√¢n vi√™n</h6>
                            <p>Xem danh s√°ch NV</p>
                        </div>
                        <div class="qa-arrow">
                            <i class="bx bx-right-arrow-alt"></i>
                        </div>
                    </a>
                </div>
                <div class="col-lg-3 col-md-6">
                    <a href="@Url.Action("Index", "Settings")" class="quick-action-card quick-action-warning">
                        <div class="qa-icon">
                            <i class="bx bx-cog"></i>
                        </div>
                        <div class="qa-content">
                            <h6>C√†i ƒë·∫∑t h·ªá th·ªëng</h6>
                            <p>Thi·∫øt l·∫≠p nh√† h√†ng</p>
                        </div>
                        <div class="qa-arrow">
                            <i class="bx bx-right-arrow-alt"></i>
                        </div>
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Counter Animation
        document.querySelectorAll('.counter-value').forEach(counter => {
            const target = parseInt(counter.getAttribute('data-target') || counter.textContent);
            const duration = 2000; // 2 seconds
            const step = target / (duration / 16); // 60fps
            let current = 0;

            const updateCounter = () => {
                current += step;
                if (current < target) {
                    counter.textContent = Math.floor(current);
                    requestAnimationFrame(updateCounter);
                } else {
                    counter.textContent = target;
                }
            };

            updateCounter();
        });

        // === 1. REVENUE CHART (Line) - IMPROVED VERSION ===
        const revenueCtx = document.getElementById('revenueChart').getContext('2d');

        // Gradient ƒë·∫πp h∆°n
        const revenueGradient = revenueCtx.createLinearGradient(0, 0, 0, 350);
        revenueGradient.addColorStop(0, 'rgba(102, 126, 234, 0.25)');
        revenueGradient.addColorStop(0.5, 'rgba(118, 75, 162, 0.15)');
        revenueGradient.addColorStop(1, 'rgba(102, 126, 234, 0.05)');

        const revenueLabels = [@Html.Raw(ViewBag.RevenueLabels ?? "\"Ch∆∞a c√≥ d·ªØ li·ªáu\"")];
        const revenueData = [@Html.Raw(ViewBag.RevenueData ?? "0")];

        new Chart(revenueCtx, {
            type: 'line',
            data: {
                labels: revenueLabels,
                datasets: [{
                    label: 'Doanh thu',
                    data: revenueData,
                    borderColor: '#667eea',
                    backgroundColor: revenueGradient,
                    borderWidth: 3,
                    fill: true,
                    tension: 0.4,
                    pointBackgroundColor: '#fff',
                    pointBorderColor: '#667eea',
                    pointBorderWidth: 3,
                    pointRadius: 6,
                    pointHoverRadius: 8,
                    pointHoverBackgroundColor: '#667eea',
                    pointHoverBorderColor: '#fff',
                    pointHoverBorderWidth: 3
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                interaction: {
                    intersect: false,
                    mode: 'index'
                },
                plugins: {
                    legend: {
                        display: true,
                        position: 'top',
                        labels: {
                            usePointStyle: true,
                            padding: 20,
                            font: { size: 13, weight: '600' },
                            color: '#64748b'
                        }
                    },
                    tooltip: {
                        backgroundColor: 'rgba(30, 41, 59, 0.95)',
                        titleColor: '#fff',
                        titleFont: { size: 14, weight: 'bold' },
                        bodyColor: '#fff',
                        bodyFont: { size: 13 },
                        padding: 12,
                        borderColor: '#667eea',
                        borderWidth: 1,
                        cornerRadius: 8,
                        displayColors: false,
                        callbacks: {
                            label: (ctx) => {
                                return 'Doanh thu: ' + new Intl.NumberFormat('vi-VN', {
                                    style: 'currency',
                                    currency: 'VND'
                                }).format(ctx.parsed.y);
                            }
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        grid: {
                            color: 'rgba(0, 0, 0, 0.05)',
                            drawBorder: false
                        },
                        ticks: {
                            color: '#94a3b8',
                            font: { size: 12 },
                            padding: 10,
                            callback: (value) => new Intl.NumberFormat('vi-VN', {
                                notation: 'compact',
                                compactDisplay: 'short'
                            }).format(value) + '‚Ç´'
                        }
                    },
                    x: {
                        grid: {
                            display: false
                        },
                        ticks: {
                            color: '#64748b',
                            font: { size: 12, weight: '500' },
                            padding: 10
                        }
                    }
                }
            }
        });

        // === 2. STATUS PIE CHART - IMPROVED VERSION ===
        const statusCtx = document.getElementById('statusChart').getContext('2d');
        const statusLabels = [@Html.Raw(ViewBag.StatusLabels ?? "\"Ch∆∞a c√≥ d·ªØ li·ªáu\"")];
        const statusData = [@Html.Raw(ViewBag.StatusData ?? "0")];

        // T√≠nh t·ªïng ƒë·ªÉ hi·ªÉn th·ªã ph·∫ßn trƒÉm
        const statusTotal = statusData.reduce((a, b) => a + b, 0);

        new Chart(statusCtx, {
            type: 'doughnut',
            data: {
                labels: statusLabels,
                datasets: [{
                    data: statusData,
                    backgroundColor: [
                        '#f59e0b',  // ƒêang ph·ª•c v·ª• - Orange
                        '#0ea5e9',  // Ch·ªù x√°c nh·∫≠n - Sky Blue
                        '#10b981',  // ƒê√£ thanh to√°n - Green
                        '#ef4444',  // ƒê√£ h·ªßy - Red
                    ],
                    borderWidth: 4,
                    borderColor: '#fff',
                    hoverOffset: 15,
                    hoverBorderWidth: 4
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                cutout: '65%',
                plugins: {
                    legend: {
                        position: 'bottom',
                        labels: {
                            padding: 20,
                            font: { size: 13, weight: '500' },
                            color: '#64748b',
                            usePointStyle: true,
                            pointStyle: 'circle',
                            generateLabels: (chart) => {
                                const datasets = chart.data.datasets;
                                return chart.data.labels.map((label, i) => ({
                                    text: `${label} (${datasets[0].data[i]})`,
                                    fillStyle: datasets[0].backgroundColor[i],
                                    hidden: false,
                                    index: i
                                }));
                            }
                        }
                    },
                    tooltip: {
                        backgroundColor: 'rgba(30, 41, 59, 0.95)',
                        titleColor: '#fff',
                        titleFont: { size: 14, weight: 'bold' },
                        bodyColor: '#fff',
                        bodyFont: { size: 13 },
                        padding: 12,
                        cornerRadius: 8,
                        callbacks: {
                            label: (ctx) => {
                                const value = ctx.parsed;
                                const percentage = ((value / statusTotal) * 100).toFixed(1);
                                return `${ctx.label}: ${value} ƒë∆°n (${percentage}%)`;
                            }
                        }
                    }
                }
            }
        });

        // === 3. TOP MENU BAR CHART - IMPROVED VERSION ===
        const topMenuCtx = document.getElementById('topMenuChart').getContext('2d');
        const topMenuLabels = [@Html.Raw(ViewBag.TopMenuLabels ?? "\"Ch∆∞a c√≥ d·ªØ li·ªáu\"")];
        const topMenuQuantities = [@Html.Raw(ViewBag.TopMenuQuantities ?? "0")];
        const topMenuRevenue = [@Html.Raw(ViewBag.TopMenuRevenue ?? "0")];

        // T·∫°o gradient cho t·ª´ng bar
        const barColors = topMenuLabels.map((_, index) => {
            const gradient = topMenuCtx.createLinearGradient(0, 0, 400, 0);
            const hue = 140 - (index * 10); // From green to yellow-green
            gradient.addColorStop(0, `hsla(${hue}, 70%, 50%, 0.8)`);
            gradient.addColorStop(1, `hsla(${hue}, 70%, 40%, 0.9)`);
            return gradient;
        });

        new Chart(topMenuCtx, {
            type: 'bar',
            data: {
                labels: topMenuLabels,
                datasets: [{
                    label: 'S·ªë l∆∞·ª£ng b√°n',
                    data: topMenuQuantities,
                    backgroundColor: barColors,
                    borderColor: '#10b981',
                    borderWidth: 0,
                    borderRadius: 10,
                    barThickness: 35,
                    maxBarThickness: 40
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                indexAxis: 'y',
                plugins: {
                    legend: {
                        display: true,
                        position: 'top',
                        labels: {
                            usePointStyle: true,
                            padding: 20,
                            font: { size: 13, weight: '600' },
                            color: '#64748b'
                        }
                    },
                    tooltip: {
                        backgroundColor: 'rgba(30, 41, 59, 0.95)',
                        titleColor: '#fff',
                        titleFont: { size: 14, weight: 'bold' },
                        bodyColor: '#fff',
                        bodyFont: { size: 13 },
                        padding: 12,
                        cornerRadius: 8,
                        callbacks: {
                            label: function (context) {
                                return 'ƒê√£ b√°n: ' + context.parsed.x + ' ph·∫ßn';
                            },
                            afterLabel: function (context) {
                                const revenue = topMenuRevenue[context.dataIndex];
                                return 'Doanh thu: ' + new Intl.NumberFormat('vi-VN', {
                                    style: 'currency',
                                    currency: 'VND'
                                }).format(revenue);
                            }
                        }
                    }
                },
                scales: {
                    x: {
                        beginAtZero: true,
                        grid: {
                            color: 'rgba(0, 0, 0, 0.05)',
                            drawBorder: false
                        },
                        ticks: {
                            color: '#94a3b8',
                            font: { size: 12 },
                            padding: 10,
                            callback: (value) => value + ' ph·∫ßn'
                        }
                    },
                    y: {
                        grid: {
                            display: false
                        },
                        ticks: {
                            color: '#64748b',
                            font: { size: 13, weight: '500' },
                            padding: 10
                        }
                    }
                }
            }
        });
    </script>

    <style>
        /* ===== MODERN DASHBOARD STYLES ===== */

        /* Welcome Card */
        .welcome-card-modern {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 0 10px 40px rgba(102, 126, 234, 0.3);
            color: white;
            position: relative;
            overflow: hidden;
        }

        .welcome-card-modern::before {
            content: '';
            position: absolute;
            top: -50%;
            right: -10%;
            width: 400px;
            height: 400px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
        }

        .welcome-title {
            font-size: 1.75rem;
            font-weight: 700;
            position: relative;
            z-index: 1;
        }

        .welcome-subtitle {
            font-size: 0.95rem;
            opacity: 0.95;
            position: relative;
            z-index: 1;
        }

        .wave {
            display: inline-block;
            animation: wave 2s ease-in-out infinite;
        }

        @@keyframes wave {

            0%,
            100% {
                transform: rotate(0deg);
            }

            25% {
                transform: rotate(20deg);
            }

            75% {
                transform: rotate(-15deg);
            }
        }

        .time-display {
            font-size: 2.5rem;
            font-weight: 700;
            line-height: 1;
        }

        .time-label {
            font-size: 0.875rem;
            opacity: 0.9;
            margin-top: 0.25rem;
        }

        /* Stat Cards */
        .stat-card {
            background: white;
            border-radius: 16px;
            padding: 1.5rem;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            position: relative;
            overflow: hidden;
            border: 1px solid rgba(0, 0, 0, 0.05);
        }

        .stat-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            transition: all 0.3s ease;
        }

        .stat-card-primary::before {
            background: linear-gradient(90deg, #667eea, #764ba2);
        }

        .stat-card-success::before {
            background: linear-gradient(90deg, #10b981, #059669);
        }

        .stat-card-info::before {
            background: linear-gradient(90deg, #3b82f6, #2563eb);
        }

        .stat-card-warning::before {
            background: linear-gradient(90deg, #f59e0b, #d97706);
        }

        .stat-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
        }

        .stat-icon {
            width: 60px;
            height: 60px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 1rem;
            position: relative;
        }

        .stat-card-primary .stat-icon {
            background: linear-gradient(135deg, #667eea15, #764ba215);
            color: #667eea;
        }

        .stat-card-success .stat-icon {
            background: linear-gradient(135deg, #10b98115, #05966915);
            color: #10b981;
        }

        .stat-card-info .stat-icon {
            background: linear-gradient(135deg, #3b82f615, #2563eb15);
            color: #3b82f6;
        }

        .stat-card-warning .stat-icon {
            background: linear-gradient(135deg, #f59e0b15, #d9770615);
            color: #f59e0b;
        }

        .stat-icon i {
            font-size: 2rem;
        }

        .stat-label {
            font-size: 0.875rem;
            color: #64748b;
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            margin-bottom: 0.5rem;
        }

        .stat-value {
            font-size: 2rem;
            font-weight: 700;
            color: #1e293b;
            margin-bottom: 0.75rem;
            line-height: 1;
        }

        .stat-trend {
            font-size: 0.85rem;
            color: #64748b;
            display: flex;
            align-items: center;
            gap: 0.25rem;
        }

        .trend-up {
            color: #10b981 !important;
        }

        .trend-up i {
            color: #10b981;
        }

        .trend-up span {
            font-weight: 600;
        }

        /* Chart Cards */
        .chart-card {
            background: white;
            border-radius: 16px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            overflow: hidden;
            border: 1px solid rgba(0, 0, 0, 0.05);
        }

        .chart-header {
            padding: 1.5rem;
            border-bottom: 1px solid #f1f5f9;
            display: flex;
            justify-content: space-between;
            align-items: center;
            background: linear-gradient(to bottom, #fafafa, white);
        }

        .chart-title {
            font-size: 1.125rem;
            font-weight: 600;
            color: #1e293b;
            margin: 0;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .chart-title i {
            color: #667eea;
            font-size: 1.25rem;
        }

        .chart-subtitle {
            font-size: 0.8125rem;
            color: #94a3b8;
            margin: 0.25rem 0 0 0;
        }

        .chart-body {
            padding: 1.5rem;
            min-height: 300px;
        }

        .chart-legend {
            display: flex;
            gap: 1rem;
        }

        .legend-item {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.875rem;
            color: #64748b;
        }

        .legend-color {
            width: 12px;
            height: 12px;
            border-radius: 3px;
        }

        /* Quick Action Cards */
        .section-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: #1e293b;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .section-title i {
            color: #f59e0b;
            font-size: 1.5rem;
        }

        .quick-action-card {
            background: white;
            border-radius: 12px;
            padding: 1.25rem;
            display: flex;
            align-items: center;
            gap: 1rem;
            text-decoration: none;
            color: inherit;
            border: 1px solid #e2e8f0;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .quick-action-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 4px;
            height: 100%;
            transition: width 0.3s ease;
        }

        .quick-action-primary::before {
            background: linear-gradient(to bottom, #667eea, #764ba2);
        }

        .quick-action-success::before {
            background: linear-gradient(to bottom, #10b981, #059669);
        }

        .quick-action-info::before {
            background: linear-gradient(to bottom, #3b82f6, #2563eb);
        }

        .quick-action-warning::before {
            background: linear-gradient(to bottom, #f59e0b, #d97706);
        }

        .quick-action-card:hover {
            transform: translateX(4px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
            border-color: transparent;
        }

        .quick-action-card:hover::before {
            width: 100%;
            opacity: 0.05;
        }

        .qa-icon {
            width: 50px;
            height: 50px;
            border-radius: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-shrink: 0;
        }

        .quick-action-primary .qa-icon {
            background: linear-gradient(135deg, #667eea15, #764ba215);
            color: #667eea;
        }

        .quick-action-success .qa-icon {
            background: linear-gradient(135deg, #10b98115, #05966915);
            color: #10b981;
        }

        .quick-action-info .qa-icon {
            background: linear-gradient(135deg, #3b82f615, #2563eb15);
            color: #3b82f6;
        }

        .quick-action-warning .qa-icon {
            background: linear-gradient(135deg, #f59e0b15, #d9770615);
            color: #f59e0b;
        }

        .qa-icon i {
            font-size: 1.5rem;
        }

        .qa-content {
            flex-grow: 1;
        }

        .qa-content h6 {
            font-size: 0.95rem;
            font-weight: 600;
            margin: 0 0 0.25rem 0;
            color: #1e293b;
        }

        .qa-content p {
            font-size: 0.8125rem;
            color: #94a3b8;
            margin: 0;
        }

        .qa-arrow {
            color: #cbd5e1;
            transition: all 0.3s ease;
        }

        .qa-arrow i {
            font-size: 1.25rem;
        }

        .quick-action-card:hover .qa-arrow {
            color: #64748b;
            transform: translateX(4px);
        }

        /* Animations */
        @@keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .stat-card,
        .chart-card,
        .quick-action-card {
            animation: fadeInUp 0.6s ease-out;
        }

        /* Responsive */
        @@media (max-width: 768px) {
            .welcome-card-modern {
                padding: 1.5rem;
            }

            .welcome-title {
                font-size: 1.5rem;
            }

            .time-display {
                font-size: 2rem;
            }

            .stat-value {
                font-size: 1.75rem;
            }
        }
    </style>
}