// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QLNHWebApp.Models;

#nullable disable

namespace QLNHWebApp.Migrations
{
    [DbContext(typeof(RestaurantDbContext))]
    [Migration("20250924105235_AddAdminSystem")]
    partial class AddAdminSystem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("QLNHWebApp.Models.Combo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Combos");
                });

            modelBuilder.Entity("QLNHWebApp.Models.ComboItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ComboId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MenuItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ComboId");

                    b.HasIndex("MenuItemId");

                    b.ToTable("ComboItems");
                });

            modelBuilder.Entity("QLNHWebApp.Models.ContactMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ContactMessages");
                });

            modelBuilder.Entity("QLNHWebApp.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 24, 17, 52, 33, 77, DateTimeKind.Local).AddTicks(4173),
                            FullName = "Admin Hệ Thống",
                            IsActive = true,
                            PasswordHash = "$2a$11$bby4vLvwdWQlC1Whe.7jnON.iDW5H2AYVCWLw6kc6xcy7vapK/Xn.",
                            Role = "Admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 9, 24, 17, 52, 33, 311, DateTimeKind.Local).AddTicks(1430),
                            FullName = "Nguyễn Văn A",
                            IsActive = true,
                            PasswordHash = "$2a$11$BFH6ubEc/XUi4fkEWrc3CuUS3EKt2qJfcqR8.Tj8DEo7qGZWdz9Oy",
                            Role = "Waiter",
                            Username = "waiter1"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 9, 24, 17, 52, 33, 423, DateTimeKind.Local).AddTicks(8739),
                            FullName = "Trần Thị B",
                            IsActive = true,
                            PasswordHash = "$2a$11$ni6oZuvnNWQ7iVGTR9KMXe3jaLlFcPSDuFKbYPsj2842FjLDOsbne",
                            Role = "Chef",
                            Username = "chef1"
                        });
                });

            modelBuilder.Entity("QLNHWebApp.Models.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Món khai vị",
                            Description = "Món khai vị truyền thống",
                            ImageUrl = "/images/goicuon.jpg",
                            Name = "Gỏi cuốn tôm thịt",
                            Price = 35000m
                        },
                        new
                        {
                            Id = 2,
                            Category = "Món chính",
                            Description = "Món chính hấp dẫn",
                            ImageUrl = "/images/boluclac.jpg",
                            Name = "Bò lúc lắc",
                            Price = 95000m
                        },
                        new
                        {
                            Id = 3,
                            Category = "Món nướng",
                            Description = "Món nướng đặc biệt",
                            ImageUrl = "/images/suonnuong.jpg",
                            Name = "Sườn nướng mật ong",
                            Price = 120000m
                        },
                        new
                        {
                            Id = 4,
                            Category = "Các món lẩu",
                            Description = "Các món lẩu thơm ngon",
                            ImageUrl = "/images/lautai.jpg",
                            Name = "Lẩu thái hải sản",
                            Price = 250000m
                        },
                        new
                        {
                            Id = 5,
                            Category = "Tráng miệng",
                            Description = "Tráng miệng mát lạnh",
                            ImageUrl = "/images/chekhucbach.jpg",
                            Name = "Chè khúc bạch",
                            Price = 30000m
                        },
                        new
                        {
                            Id = 6,
                            Category = "Đồ uống",
                            Description = "Đồ uống giải khát",
                            ImageUrl = "/images/tradao.jpg",
                            Name = "Trà đào cam sả",
                            Price = 40000m
                        });
                });

            modelBuilder.Entity("QLNHWebApp.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("Guests")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("QLNHWebApp.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MenuItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("QLNHWebApp.Models.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("MenuItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("QLNHWebApp.Models.RestaurantSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly>("CloseTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly>("OpenTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RestaurantName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RestaurantSettings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Đường ABC, Quận 1, TP.HCM",
                            CloseTime = new TimeOnly(22, 0, 0),
                            Email = "info@3tlrestaurant.com",
                            OpenTime = new TimeOnly(10, 0, 0),
                            Phone = "028.1234.5678",
                            RestaurantName = "Nhà Hàng 3TL",
                            TaxRate = 0.1m
                        });
                });

            modelBuilder.Entity("QLNHWebApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("QLNHWebApp.Models.ComboItem", b =>
                {
                    b.HasOne("QLNHWebApp.Models.Combo", "Combo")
                        .WithMany("ComboItems")
                        .HasForeignKey("ComboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLNHWebApp.Models.MenuItem", "MenuItem")
                        .WithMany()
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Combo");

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("QLNHWebApp.Models.OrderItem", b =>
                {
                    b.HasOne("QLNHWebApp.Models.MenuItem", "MenuItem")
                        .WithMany("OrderItems")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLNHWebApp.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("QLNHWebApp.Models.Rating", b =>
                {
                    b.HasOne("QLNHWebApp.Models.MenuItem", "MenuItem")
                        .WithMany("Ratings")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("QLNHWebApp.Models.Combo", b =>
                {
                    b.Navigation("ComboItems");
                });

            modelBuilder.Entity("QLNHWebApp.Models.MenuItem", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("QLNHWebApp.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
